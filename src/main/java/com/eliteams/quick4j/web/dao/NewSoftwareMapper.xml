<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.eliteams.quick4j.web.dao.NewSoftwareMapper" >
  <resultMap id="BaseResultMap" type="com.eliteams.quick4j.web.model.NewSoftware" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="rangeupdateminid" property="rangeupdateminid" jdbcType="INTEGER" />
    <result column="rangeupdatemaxid" property="rangeupdatemaxid" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="appurl" property="appurl" jdbcType="VARCHAR" />
    <result column="publishdate" property="publishdate" jdbcType="TIMESTAMP" />
    <result column="newdescribe" property="newdescribe" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, rangeupdateminid, rangeupdatemaxid, version, appurl, publishdate, newdescribe
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.eliteams.quick4j.web.model.NewSoftwareExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from new_software
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from new_software
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from new_software
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.eliteams.quick4j.web.model.NewSoftwareExample" >
    delete from new_software
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eliteams.quick4j.web.model.NewSoftware" >
    insert into new_software (id, rangeupdateminid, rangeupdatemaxid, 
      version, appurl, publishdate, 
      newdescribe)
    values (#{id,jdbcType=INTEGER}, #{rangeupdateminid,jdbcType=INTEGER}, #{rangeupdatemaxid,jdbcType=INTEGER}, 
      #{version,jdbcType=VARCHAR}, #{appurl,jdbcType=VARCHAR}, #{publishdate,jdbcType=TIMESTAMP}, 
      #{newdescribe,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.eliteams.quick4j.web.model.NewSoftware" >
    insert into new_software
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="rangeupdateminid != null" >
        rangeupdateminid,
      </if>
      <if test="rangeupdatemaxid != null" >
        rangeupdatemaxid,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="appurl != null" >
        appurl,
      </if>
      <if test="publishdate != null" >
        publishdate,
      </if>
      <if test="newdescribe != null" >
        newdescribe,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="rangeupdateminid != null" >
        #{rangeupdateminid,jdbcType=INTEGER},
      </if>
      <if test="rangeupdatemaxid != null" >
        #{rangeupdatemaxid,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="appurl != null" >
        #{appurl,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null" >
        #{publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="newdescribe != null" >
        #{newdescribe,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eliteams.quick4j.web.model.NewSoftwareExample" resultType="java.lang.Integer" >
    select count(*) from new_software
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update new_software
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.rangeupdateminid != null" >
        rangeupdateminid = #{record.rangeupdateminid,jdbcType=INTEGER},
      </if>
      <if test="record.rangeupdatemaxid != null" >
        rangeupdatemaxid = #{record.rangeupdatemaxid,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=VARCHAR},
      </if>
      <if test="record.appurl != null" >
        appurl = #{record.appurl,jdbcType=VARCHAR},
      </if>
      <if test="record.publishdate != null" >
        publishdate = #{record.publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.newdescribe != null" >
        newdescribe = #{record.newdescribe,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update new_software
    set id = #{record.id,jdbcType=INTEGER},
      rangeupdateminid = #{record.rangeupdateminid,jdbcType=INTEGER},
      rangeupdatemaxid = #{record.rangeupdatemaxid,jdbcType=INTEGER},
      version = #{record.version,jdbcType=VARCHAR},
      appurl = #{record.appurl,jdbcType=VARCHAR},
      publishdate = #{record.publishdate,jdbcType=TIMESTAMP},
      newdescribe = #{record.newdescribe,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eliteams.quick4j.web.model.NewSoftware" >
    update new_software
    <set >
      <if test="rangeupdateminid != null" >
        rangeupdateminid = #{rangeupdateminid,jdbcType=INTEGER},
      </if>
      <if test="rangeupdatemaxid != null" >
        rangeupdatemaxid = #{rangeupdatemaxid,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="appurl != null" >
        appurl = #{appurl,jdbcType=VARCHAR},
      </if>
      <if test="publishdate != null" >
        publishdate = #{publishdate,jdbcType=TIMESTAMP},
      </if>
      <if test="newdescribe != null" >
        newdescribe = #{newdescribe,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eliteams.quick4j.web.model.NewSoftware" >
    update new_software
    set rangeupdateminid = #{rangeupdateminid,jdbcType=INTEGER},
      rangeupdatemaxid = #{rangeupdatemaxid,jdbcType=INTEGER},
      version = #{version,jdbcType=VARCHAR},
      appurl = #{appurl,jdbcType=VARCHAR},
      publishdate = #{publishdate,jdbcType=TIMESTAMP},
      newdescribe = #{newdescribe,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>